üü¢ 1. asyncio01.py ‚Üí Queue ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
Producer ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô 10 ‡∏ä‡∏¥‡πâ‡∏ô (‡∏Ñ‡πà‡∏≤ 0‚Äì9) ‡πÅ‡∏•‡πâ‡∏ß await queue.put(value) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà‡∏•‡∏á Queue
‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏à‡∏∞‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì None ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å consumer ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î
Consumer ‡∏£‡∏≠‡∏î‡πâ‡∏ß‡∏¢ await queue.get() ‚Üí ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß print ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‚Üí ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠ None ‡∏Å‡πá break
üìå ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Producer-Consumer ‡πÉ‡∏ô PDF (‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ‡πÜ) ‚Üí ‡πÉ‡∏ä‡πâ put() ‡πÅ‡∏•‡∏∞ get() ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô blocking ‡πÅ‡∏ö‡∏ö async ‚Üí ‡∏ñ‡πâ‡∏≤ Queue ‡∏ß‡πà‡∏≤‡∏á consumer ‡∏à‡∏∞ ‚Äú‡∏£‡∏≠‚Äù ‡∏à‡∏ô producer ‡πÉ‡∏™‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤

üü¢ 2. asyncio02.py ‚Üí Queue ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ö‡∏•‡πá‡∏≠‡∏Å
‡πÉ‡∏ä‡πâ queue.get_nowait() ‡πÅ‡∏ó‡∏ô await queue.get()
‡∏ñ‡πâ‡∏≤ Queue ‡∏ß‡πà‡∏≤‡∏á ‚Üí ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î asyncio.QueueEmpty ‚Üí ‡∏à‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ try-except ‡πÅ‡∏•‡πâ‡∏ß consumer ‡∏û‡∏±‡∏Å await asyncio.sleep(0.5)
‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà consumer ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å ‚Äú‡∏ö‡∏•‡πá‡∏≠‡∏Å‚Äù ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏ß‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢ ‡πÜ (busy waiting + sleep)
üìå ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Asyncio Queue without block ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ consumer ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ QueueEmpty exception ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≠

üü¢ 3. asyncio03.py ‚Üí Queue + task_done() ‡πÅ‡∏•‡∏∞ join()
Producer ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡∏•‡∏á Queue ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏ö
Consumer ‡∏î‡∏∂‡∏á‡∏î‡πâ‡∏ß‡∏¢ await queue.get() ‚Üí ‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏ï‡πâ‡∏≠‡∏á queue.task_done() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ ‚Äú‡∏á‡∏≤‡∏ô‡∏ä‡∏¥‡πâ‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‚Äù
await queue.join() ‡πÉ‡∏ô main ‡∏à‡∏∞‡∏£‡∏≠‡∏à‡∏ô‡∏ó‡∏∏‡∏Å‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å consumer ‡∏ó‡∏≥‡∏Ñ‡∏£‡∏ö
üìå ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Asyncio Queue Join and Task done ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ join/task_done ‡πÄ‡∏û‡∏∑‡πà‡∏≠ sync ‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å task ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏£‡∏¥‡∏á ‡πÜ

üü¢ 4. asyncio04.py ‚Üí Supermarket Simulation
Customer (Producer) ‚Üí ‡πÉ‡∏™‡πà (‡∏ä‡∏∑‡πà‡∏≠, ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤) ‡∏•‡∏á queue
Cashier (Consumer) ‚Üí ‡∏´‡∏¢‡∏¥‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‚Üí ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‚Üí ‡∏£‡∏≠‡∏î‡πâ‡∏ß‡∏¢ await asyncio.sleep(process_time) ‚Üí ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß task_done()
‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢ cashier ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡∏Ç‡∏ô‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏î‡πâ‡∏ß‡∏¢ asyncio)
‡πÄ‡∏°‡∏∑‡πà‡∏≠ customer ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à ‚Üí queue.join() ‚Üí ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å task ‡∏Ç‡∏≠‡∏á cashier
‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏ï‡πà‡∏•‡∏∞ cashier
üìå ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Supermarket Simulation ‡∏ó‡∏µ‡πà‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ß‡πà‡∏≤ queue ‡∏Ñ‡∏∑‡∏≠ buffer ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á producer (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤) ‡πÅ‡∏•‡∏∞ consumer (‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå) ‡πÄ‡∏û‡∏∑‡πà‡∏≠ balance ‡∏Å‡∏±‡∏ô

‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å 4 ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ
asyncio.Queue() ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô buffer ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á coroutines
put() / get() ‚Üí ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö async, ‡∏ñ‡πâ‡∏≤ queue ‡∏ß‡πà‡∏≤‡∏á/‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏∞‡∏ö‡∏•‡πá‡∏≠‡∏Å (‡∏£‡∏≠)
get_nowait() / put_nowait() ‚Üí ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ö‡∏•‡πá‡∏≠‡∏Å ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏ö exception
task_done() / join() ‚Üí ‡πÉ‡∏ä‡πâ sync ‡∏ß‡πà‡∏≤ consumer ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß
Pattern ‡∏ô‡∏µ‡πâ = Producer-Consumer ‚Üí ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å‡πÉ‡∏ô high-concurrency

